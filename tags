!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
F	Memory.java	/^	private int F;		\/\/ frames$/;"	f	class:Memory	file:
F	Scheduler.java	/^	private int F;$/;"	f	class:Scheduler	file:
F	c3238179A3.java	/^	static private int F;	\/\/ number of frames$/;"	f	class:c3238179A3	file:
Frame	Frame.java	/^	public Frame()$/;"	m	class:Frame
Frame	Frame.java	/^public class Frame$/;"	c
Memory	Memory.java	/^	public Memory(int F)$/;"	m	class:Memory
Memory	Memory.java	/^public class Memory$/;"	c
PageRequest	PageRequest.java	/^	public PageRequest(int page, int ready)$/;"	m	class:PageRequest
PageRequest	PageRequest.java	/^public class PageRequest$/;"	c
Process	Process.java	/^	public Process()$/;"	m	class:Process
Process	Process.java	/^	public Process(LinkedList<Integer> pages, int id, int frames, String name)$/;"	m	class:Process
Process	Process.java	/^public class Process\/\/ implements Comparable<Process>$/;"	c
Q	Scheduler.java	/^	private int Q;$/;"	f	class:Scheduler	file:
Q	c3238179A3.java	/^	static private int Q;	\/\/ quantum size$/;"	f	class:c3238179A3	file:
Scheduler	Scheduler.java	/^	public Scheduler(int F, int Q, String strategy)$/;"	m	class:Scheduler
Scheduler	Scheduler.java	/^public class Scheduler$/;"	c
add	Memory.java	/^	public void add(int page, String strategy)$/;"	m	class:Memory
addFault	Process.java	/^	public void addFault(int time)$/;"	m	class:Process
addProcesses	c3238179A3.java	/^	public static Process[] addProcesses(File files[], BufferedReader br[], int F, int Q, String[] args) throws Exception$/;"	m	class:c3238179A3
addReadyPages	Process.java	/^	public boolean addReadyPages(int time, String strategy)$/;"	m	class:Process
addRequest	Process.java	/^	public void addRequest(int page, int time)$/;"	m	class:Process
blocked	Scheduler.java	/^	private LinkedList<Process> blocked;$/;"	f	class:Scheduler	file:
br	c3238179A3.java	/^	static BufferedReader br[];$/;"	f	class:c3238179A3
c3238179A3	c3238179A3.java	/^public class c3238179A3$/;"	c
check	Process.java	/^	public int check()$/;"	m	class:Process
checkForReady	Scheduler.java	/^	public void checkForReady()$/;"	m	class:Scheduler
count	Scheduler.java	/^	private int count;$/;"	f	class:Scheduler	file:
debugger	Scheduler.java	/^	public void debugger()$/;"	m	class:Scheduler
debuggerM	Scheduler.java	/^	public void debuggerM()$/;"	m	class:Scheduler
execute	Memory.java	/^	public void execute(int page, int time)$/;"	m	class:Memory
execute	Scheduler.java	/^	public void execute(Process ready)$/;"	m	class:Scheduler
faultNo	Process.java	/^	public int faultNo()$/;"	m	class:Process
faultTimes	Process.java	/^	private ArrayList<Integer> faultTimes;$/;"	f	class:Process	file:
files	c3238179A3.java	/^	static File files[];$/;"	f	class:c3238179A3
finishTime	Process.java	/^	private int finishTime;$/;"	f	class:Process	file:
finished	Scheduler.java	/^	private LinkedList<Process> finished;$/;"	f	class:Scheduler	file:
frames	Process.java	/^	private int frames;$/;"	f	class:Process	file:
getFaults	Process.java	/^	public String getFaults()$/;"	m	class:Process
getFinishTime	Process.java	/^	public int getFinishTime()$/;"	m	class:Process
getID	Process.java	/^	public int getID()$/;"	m	class:Process
getLastUsed	Frame.java	/^	public int getLastUsed()$/;"	m	class:Frame
getMemory	Process.java	/^	public Memory getMemory()$/;"	m	class:Process
getName	Process.java	/^	public String getName()$/;"	m	class:Process
getPage	Frame.java	/^	public int getPage()$/;"	m	class:Frame
getPage	PageRequest.java	/^	public int getPage()$/;"	m	class:PageRequest
getPages	Process.java	/^	public List<Integer> getPages()$/;"	m	class:Process
getReady	PageRequest.java	/^	public int getReady()$/;"	m	class:PageRequest
getState	Process.java	/^	public String getState()$/;"	m	class:Process
getUseBit	Frame.java	/^	public int getUseBit()$/;"	m	class:Frame
getWaiting	Process.java	/^	public int getWaiting()$/;"	m	class:Process
hasPage	Memory.java	/^	public boolean hasPage(int page)$/;"	m	class:Memory
hasPage	Process.java	/^	public boolean hasPage(int page)$/;"	m	class:Process
id	Process.java	/^	private int id;$/;"	f	class:Process	file:
in	Scheduler.java	/^	private Scanner in;$/;"	f	class:Scheduler	file:
lastUsed	Frame.java	/^	private int lastUsed;$/;"	f	class:Frame	file:
main	c3238179A3.java	/^	public static void main(String args[]) throws Exception$/;"	m	class:c3238179A3
memory	Memory.java	/^	private Frame memory[];$/;"	f	class:Memory	file:
memory	Process.java	/^	private Memory memory;$/;"	f	class:Process	file:
name	Process.java	/^	private String name;$/;"	f	class:Process	file:
page	Frame.java	/^	private int page;$/;"	f	class:Frame	file:
page	PageRequest.java	/^	private int page;$/;"	f	class:PageRequest	file:
pageExecute	Process.java	/^	public void pageExecute(int time)$/;"	m	class:Process
pages	Process.java	/^	private LinkedList<Integer> pages;$/;"	f	class:Process	file:
pointer	Memory.java	/^	private int pointer;$/;"	f	class:Memory	file:
processes	Scheduler.java	/^	private LinkedList<Process> processes;$/;"	f	class:Scheduler	file:
ready	PageRequest.java	/^	private int ready;$/;"	f	class:PageRequest	file:
readyQueue	Scheduler.java	/^	private LinkedList<Process> readyQueue;$/;"	f	class:Scheduler	file:
requests	Process.java	/^	private List<PageRequest> requests;$/;"	f	class:Process	file:
requests	Scheduler.java	/^	private List<PageRequest> requests;$/;"	f	class:Scheduler	file:
run	Scheduler.java	/^	public void run(Process process[])$/;"	m	class:Scheduler
setFinishTime	Process.java	/^	public void setFinishTime(int time)$/;"	m	class:Process
setLastUsed	Frame.java	/^	public void setLastUsed(int time)$/;"	m	class:Frame
setPage	Frame.java	/^	public void setPage(int page)$/;"	m	class:Frame
setState	Process.java	/^	public void setState(String state)$/;"	m	class:Process
setUseBit	Frame.java	/^	public void setUseBit(int bit)$/;"	m	class:Frame
setWaiting	Process.java	/^	public void setWaiting(int page)$/;"	m	class:Process
size	Memory.java	/^	public int size()$/;"	m	class:Memory
state	Process.java	/^	private String state;$/;"	f	class:Process	file:
strategy	Scheduler.java	/^	private String strategy;$/;"	f	class:Scheduler	file:
temp	Scheduler.java	/^	String temp = null;$/;"	f	class:Scheduler
time	Scheduler.java	/^	private int time;$/;"	f	class:Scheduler	file:
toInsert	Scheduler.java	/^	private LinkedList<Process> toInsert;$/;"	f	class:Scheduler	file:
useBit	Frame.java	/^	private int useBit;$/;"	f	class:Frame	file:
waiting	Process.java	/^	private int waiting;		\/\/ page waiting on if blocked$/;"	f	class:Process	file:
